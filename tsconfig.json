{
  "compilerOptions": {
    // 编译出JS的目标ES版本
    "target": "ES2020",
    // 使用的ES版本
    "module": "es2020",
    // 不允许编译器编译JS，JSX文件
    "allowJs": false,
    // 将 class 声明中的字段语义从 [[Set]] 变更到 [[Define]]
    "useDefineForClassFields": true,
    // 用于选择模块解析策略，有'node'和'classic'两种类型
    "moduleResolution": "node",
    // 开启严格模式
    "strict": true,
    // 强制代码中使用的模块文件名必须和文件系统中的文件名保持大小写一致
    "forceConsistentCasingInFileNames": false,
    // 允许使用 xxx 代替 * as xxx 导入
    "allowSyntheticDefaultImports": true,
    // 指定 jsx 代码的生成: 'preserve', 'react-native', or 'react'
    "jsx": "preserve",
    // 用来指定编译时是否生成.map文件
    "sourceMap": true,
    // 通过为导入内容创建命名空间，实现CommonJS和ES模块之间的互操作性
    "esModuleInterop": true,
    // 是否可以导入 json module
    "resolveJsonModule": true,
    // 是否检测定义了但是没使用的变量, 对于未使用的变量不进行爆红处理
    "noUnusedLocals": false,
    // 是否检查是否有在函数体中没有使用的参数, 对于函数中未使用的参数不进行爆红处理
    "noUnusedParameters": false,
    // 是否启用实验性的装饰器特性-prettier对于装饰器语法的警告
    "experimentalDecorators": true,
    // ts中可以使用的库 这里配置为 dom 与 es模块
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    // 允许变量或函数参数具有隐式any类型
    "noImplicitAny": false,
    // 启用阻止对下载库的类型检查
    "skipLibCheck": true,
    // types用来指定需要包含的模块
    "types": ["vite/client", "element-plus/global"],
    // 编译的时候删除注释
    "removeComments": true,
    // 如果某个 ts 文件中没有一个import or export 时， ts 则认为这个模块不是一个 ES Module 模块，它被认为是一个全局的脚本，
    "isolatedModules": true,
    // 不输出文件,即编译后不会生成任何js文件,默认：false
    "noEmit": true,
    // 检查switch中是否含有case没有使用break跳出，默认：false (即如果没有break语句后面不会执行)
    "noFallthroughCasesInSwitch": true,
    // 使用绝对路径时使用baseUrl去解析导入路径
    "baseUrl": ".",
    // 为导入路径配置别名
    "paths": {
      "@/*": ["src/*"],
      "~@/*": ["src/*"],
      "~/*": ["src/*"]
    },
    // 配置虚拟目录
    "rootDirs": []
  },
  // 指定需要编译文件
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "types/**/*.d.ts",
    "types/**/*.ts",
    "build/**/*.ts",
    "build/**/*.d.ts",
    "mock/**/*.ts",
    "test/**/*.ts",
    "vite-plugin.ts", // vite-plugin.ts 在 vite.config.ts 中被引用，需要提前编译，写到vite.config.ts的上面
    "vite.config.ts",

    "src/about.js"
  ],
  // 指定不需要编译的文件
  "exclude": ["node_modules", "dist", "**/*.js"],
  // references 属性作用是指定工程引用依赖，即 tsconfig.node.json
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}
